!!! 5
html
	head
		title LEGO Turing Machine
		link(rel='stylesheet', href='styles/normalize.css')
		link(rel='stylesheet', href='styles/main.css')
	body
		h1 A Turing Machine built using LEGO
		img#head(src='images/global.jpg', width='640px', height='480px')
		
		nav
			a(href="#Video") Short documentary
			a(href="#Turing") The Turing Machine
			a(href="#Hardware") Hardware: LEGO
			a(href="#Software") Software: Rascal
			a(href="#Credits") Credits

		section#Video
			h2 Video
			.vimeo
				<iframe src="http://player.vimeo.com/video/44202270" width="500" height="213" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
			p
				| Short documentary by Andre Theelen of 
				&nbsp;
				a(href="http://www.ecalpemos.nl", target="_blank") ecalpemos.nl

		section#Turing
			h2 The Turing Machine
			p
				| According to
				&nbsp;
				a(href="http://en.wikipedia.org/wiki/Turing_machine") Wikipedia
				| :
			p
				| "A Turing machine is a device that manipulates symbols on a strip
				| of tape according to a table of rules. Despite its simplicity, a
				| Turing machine can be adapted to simulate the logic of any computer
				| algorithm, and is particularly useful in explaining the functions
				| of a CPU inside a computer."
			p
				| Unlike what the name suggests, it is not a physical machine but
				| rather a theoretical model. It's very simply, but describes the
				| fundamental capabilities of practically all computers in use today.
				| This means that if something can be done on a computer, it can also
				| be done on a Turing machine. This makes it a great model for
				| scientists to use to discover the limits of computers (e.g.
				| complexity theory) and also to show to a broad audience how a
				| computer fundamentally operates.
			p
				| However, abstract models are just that, an abstraction of
				| something. In order to really show how simple the fundamental
				| model of a computer is, we have developed a physical
				| implementation of the Turing machine, using LEGO Mindstorms NXT.

		section#LEGO
			h2 LEGO
			p
				| Our LEGO Turing machine uses a tape based on a classic
				| interpretation of computer memory: switches. Additionally, it uses
				| a light sensor to determine the value of a switch: if the switch is
				| on, the sensor will
				&nbsp;
				i see
				&nbsp;
				| the black colour of the switch's surface. But if it is turned off,
				| the sensor will
				&nbsp;
				i see
				&nbsp;
				| the white colour of the LEGO beam, making it possible to
				| distinguish between the states. Finally, a rotating beam mounted
				| above the tape can flip the switch in both directions.

		section#Software
			h2 Software
			p
				| The software we have developed to execute programs in a basic
				| Turing machine language can be found on
				&nbsp;
				a(href="https://github.com/DavyLandman/TuringLEGO", target="_blank") github
				&nbsp;
				| Additionally, we have developed an interactive development
				| environment (IDE) using the
				&nbsp;
				a(href="http://www.rascal-mpl.org", target="_blank") Rascal Metaprogramming Language
				&nbsp;
				| which is stored in our public
				&nbsp;
				a(href="http://svn.rascal-mpl.org/rascal/trunk/src/org/rascalmpl/library/demo/lang/turing/", target="_blank") subversion repository

		section#Credits
			h2 Credits
				.image-credits
					a(href="http://www.cwi.nl", target="_blank"): img(src="images/CWI.png", height="75px")
					a(href="http://www.rascal-mpl.org", target="_blank"): img(src="images/RASCAL.png", height="75px")
					a(href="http://www.lego.nl", target="_blank"): img(src="images/LEGO.png", height="75px")
			h3 Build by
			ul
				li Jeroen van den Bos (CWI/NFI)
				li Davy Landman (CWI)

			h3 Additional contributions by
			ul
				li Karin Blankers (CWI)
				li Paul Klint (CWI)
				li Atze van der Ploeg (CWI)
				li Tijs van der Storm (CWI)
				li Jurgen Vinju (CWI)


